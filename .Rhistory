# 3
## a
z = seq(1, 40, 2)
z
# 3
## a
z = seq(1, 39, 2)
z
z[z %% 3 == 0]
## d
z[z %% 3 == 0] / 3
# 4
sum(seq(2, 998, 2))
# 8
nome = "renato"
paste(toupper(substr(nome, 1, 1)), substr(nome, 2, nchar(nome)))
paste(toupper(substr(nome, 1, 1)), substr(nome, 2, nchar(nome)), sep = "")
substr(nome, 2)
## c
length(which(gastos > mean(gastos)))
x = which(gastos > mean(gastos))
y = gastos[gastos > mean(gastos)] / sum(gastos)
# 10
gastos = c(60, 55, 38, 87, 65, 63, 43, 44, 45, 50, 78, 67)
## a
sum(gastos)
## c
length(which(gastos > mean(gastos)))
x = which(gastos > mean(gastos))
y = gastos[gastos > mean(gastos)] / sum(gastos)
paste(x, y, sep = ": ")
## c
length(which(gastos > mean(gastos)))
y = gastos[gastos > mean(gastos)] / sum(gastos) * 100
paste(x, y, sep = ": ")
# 11
## a
p = round(runif(100, 1, 100))
p
round(runif(100))
round(runif(100) * 100)
# 11
## a
p = round(runif(100, 1, 100))
p
## b
nivel = rep("", 100)
nivel[which(pts < 20)] = "Mau"
nivel[which(pts >= 20 & pts < 50)] = "Insuficiente"
# 11
## a
pts = round(runif(100, 1, 100))
## b
nivel = rep("", 100)
nivel[which(pts < 20)] = "Mau"
nivel[which(pts >= 20 & pts < 50)] = "Insuficiente"
nivel[which(pts >= 50 & pts < 80)] = "Bom"
nivel[which(pts <= 80)] = "Muito Bom"
table(nivel)
nivel[which(pts >= 80)] = "Muito Bom"
table(nivel)
# 11
## a
pts = round(runif(100, 1, 100))
## b
nivel = rep("", 100)
nivel[which(pts < 20)] = "Mau"
nivel[which(pts >= 20 & pts < 50)] = "Insuficiente"
nivel[which(pts >= 50 & pts < 80)] = "Bom"
nivel[which(pts >= 80)] = "Muito Bom"
table(nivel)
# 11
## a
pts = round(runif(100, 1, 100))
## b
nivel = rep("", 100)
nivel[which(pts < 20)] = "Mau"
nivel[which(pts >= 20 & pts < 50)] = "Insuficiente"
nivel[which(pts >= 50 & pts < 80)] = "Bom"
nivel[which(pts >= 80)] = "Muito Bom"
table(nivel)
# 11
## a
pts = round(runif(100, 1, 100))
## b
nivel = rep("", 100)
nivel[which(pts < 20)] = "Mau"
nivel[which(pts >= 20 & pts < 50)] = "Insuficiente"
nivel[which(pts >= 50 & pts < 80)] = "Bom"
nivel[which(pts >= 80)] = "Muito Bom"
table(nivel)
# 11
## a
pts = round(runif(100, 1, 100))
## b
nivel = rep("", 100)
nivel[which(pts < 20)] = "Mau"
nivel[which(pts >= 20 & pts < 50)] = "Insuficiente"
nivel[which(pts >= 50 & pts < 80)] = "Bom"
nivel[which(pts >= 80)] = "Muito Bom"
table(nivel)
# 11
## a
pts = round(runif(100, 1, 100))
## b
nivel = rep("", 100)
nivel[which(pts < 20)] = "Mau"
nivel[which(pts >= 20 & pts < 50)] = "Insuficiente"
nivel[which(pts >= 50 & pts < 80)] = "Bom"
nivel[which(pts >= 80)] = "Muito Bom"
table(nivel)
mat = matrix(1 : 20, 4, 5)
mat
x = 1 : 10
m1 <- cbind(x, x ^ 2, x ^ 3)
m1
rbind(m1, c(20, 40, 60))
mat[2, 3]
mat[1 : 2, 4 : 5]
mat[1 : 2, 4]
mat[1 : 2, 4 : 5]
mat[2,]
mat[,2]
mat[2 : 3,]
## DIMENSOES
dim(mat)
nrow(mat)
ncol(mat)
mat1 = matrix(8 : 1, 4, 2)
mat1
dim(mat1) = c(2, 4)
mat1
matrix(8 : 1, 4, 2)
matrix(8 : 1, 2, 4)
dim(mat1) = c(2, 4)
mat1
## OPERACOES ARITMETICAS
mean(mat)
sqrt(mat[2 : 3, 3 : 4])
cos(pi * mat)
## APLICAR FUNCOES
apply(mat, 1, sum)
## MULTIPLICACAO DE MATRIZES
A = matrix(1 : 4, 2, 2)
B = matrix(4 : 1, 2, 2)
C = A%*%B
C
A
B
## APLICAR FUNCAO A TODAS LINHAS OU COLUNAS
apply(mat, 1, sum) # MATRIZ, 1 LINHA || 2 COLUNA, FUNCAO
## b
"nr.minimo.elementos" = function (vetor, soma) {
vetor = sort(vetor)
conta_elem = 0
soma_elem = 0
i = 1
while (i <= length(vetor)) {
if (soma_elem < soma) {
conta_elem = conta_elem + 1
soma_elem = soma_elem + vetor[i]
}
i = i + 1
}
paste("Qtde de elementos para atingir a SOMA: ", conta_elem)
}
vetor_a = c(15, 25, 5, 20, 10)
nr.minimo.elementos(vetor_a, 30)
## b
"nr.minimo.elementos" = function (vetor, soma) {
vetor = sort(vetor)
conta_elem = 0
soma_elem = 0
i = 1
while (i <= length(vetor)) {
if (soma_elem < soma) {
conta_elem = conta_elem + 1
soma_elem = soma_elem + vetor[i]
}
i = i + 1
}
paste("Qtde de elementos para atingir a SOMA:", conta_elem)
}
vetor_a = c(15, 25, 5, 20, 10)
nr.minimo.elementos(vetor_a, 30)
